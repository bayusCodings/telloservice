basePath: /v1
definitions:
  models.ApiResponse-models_LoginResponseDto:
    properties:
      data:
        $ref: '#/definitions/models.LoginResponseDto'
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.ApiResponse-models_UserResponseDto:
    properties:
      data:
        $ref: '#/definitions/models.UserResponseDto'
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.CreateUserInputDto:
    properties:
      email:
        type: string
      firstName:
        maxLength: 50
        minLength: 2
        type: string
      lastName:
        maxLength: 50
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    - username
    type: object
  models.LoginResponseDto:
    properties:
      token:
        type: string
    type: object
  models.UserLoginInputDto:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.UserResponseDto:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      isEmailVerified:
        type: boolean
      lastName:
        type: string
      username:
        type: string
    type: object
host: localhost:50055
info:
  contact:
    email: ogunbayo.abayo@gmail.com
    name: Ogunbayo Abayomi
    url: https://github.com/bayuscodings
  description: API documentation for TelloService.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: TelloService API
  version: "1.0"
paths:
  /user:
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserInputDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ApiResponse-models_UserResponseDto'
      summary: Create a new user
      tags:
      - users
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a user's details by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-models_UserResponseDto'
      summary: Get user by ID
      tags:
      - users
  /user/login:
    post:
      consumes:
      - application/json
      description: Validates user credentials and log user in
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginInputDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-models_LoginResponseDto'
      summary: User login
      tags:
      - users
  /user/me:
    get:
      consumes:
      - application/json
      description: Gets the currently logged-in user details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ApiResponse-models_UserResponseDto'
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
